pipelines:
  default:
    - parallel:
        - step:
            name: Validate
            image: hashicorp/terraform:1.7.5
            script:
               - terraform fmt -recursive -check

        - step:
            name: Validate
            image: ubuntu:jammy-20240227
            trigger: manual
            script:
               - wget "https://github.com/terraform-linters/tflint/releases/latest/download/tflint_linux_amd64.zip" -O tflint.zip
               - unzip tflint.zip && mv tflint /usr/local/bin/ && tflint --version
               - tflint --recursive --config "$(pwd)/.tflint.hcl"

        - step:
            name: Security Scan
            script:
              - pipe: atlassian/git-secrets-scan:0.5.1

  branches:
    '{master,develop}':
      - step:
          name: Run Infracost on default branch and update Infracost Cloud
          image: infracost/infracost:ci-0.10
          script:
          - |
            infracost breakdown \
              --path=. \
              --format=json \
              --out-file=/tmp/infracost.json

            infracost upload --path=/tmp/infracost.json || echo "Always pass main branch runs even if there are policy failures"

      - step:
          name: Update PR status in Infracost Cloud
          image: infracost/infracost:ci-0.10
          script:
          - |
            PATTERN="pull request #([0-9]+)"
            if [[ "$(git show $BITBUCKET_COMMIT)" =~ $PATTERN ]]; then
              PR_ID=${BASH_REMATCH[1]}
              echo "Updating status of $PR_ID"

              curl \
                --request POST \
                --header "Content-Type: application/json" \
                --header "X-API-Key: ${INFRACOST_API_KEY}" \
                --data "{ \"query\": \"mutation { updatePullRequestStatus(url: \\\"${BITBUCKET_GIT_HTTP_ORIGIN}/pull-requests/${PR_ID}\\\", status: MERGED) }\" }" \
                "https://dashboard.api.infracost.io/graphql"
            else
              echo "Nothing to do as the commit message did not contain a merged PR ID."
            fi

      - step:
          name: Infrastructure as code static analysis
          image:
            name: bridgecrew/checkov:3.2.55
            entrypoint:
              - '/usr/bin/env'
              - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
          trigger: manual
          script:
            - checkov -d .

      - step:
          name: IODC autorization
          oidc: true
          image: amazon/aws-cli:2.15.36
          max-time: 5
          script:
            - echo "role - ${IODC_IAM_ROLE_ARN}"
            - set -- $(aws sts assume-role-with-web-identity
              --role-arn ${IODC_IAM_ROLE_ARN}
              --role-session-name bitbucket-build-session
              --web-identity-token $BITBUCKET_STEP_OIDC_TOKEN
              --duration-seconds 1000
              --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
              --output text)

            - export AWS_ACCESS_KEY_ID="$1"
            - export AWS_SECRET_ACCESS_KEY="$2"
            - export AWS_SESSION_TOKEN="$3"
            - export AWS_DEFAULT_REGION="us-east-1"

            - echo -e "Check access from managment account"
            - aws s3 ls

            - echo -e "Assume role from development account"
            - set -- $(aws sts assume-role
              --role-arn arn:aws:iam::935454902317:role/terraform-execution-full-access
              --role-session-name terraform-execution-full-access
              --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
              --output text)

            - export AWS_ACCESS_KEY_ID="$1"
            - export AWS_SECRET_ACCESS_KEY="$2"
            - export AWS_SESSION_TOKEN="$3"
            - export AWS_DEFAULT_REGION="us-east-1"
            - aws s3 ls

      - step:
          name: Validate
          image: hashicorp/terraform:1.7.5
          trigger: manual
          script:
            - terraform init --upgrade -migrate-state && terraform validate

      - step:
          name: Deploy to Production
          deployment: Production
          image: hashicorp/terraform:1.7.5
          trigger: manual
          script:
            - terraform init
            - terraform plan
          # - terraform apply -auto-approve
