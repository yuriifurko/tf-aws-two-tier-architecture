stages:
  - build
  - auth

.mng_variables: &mng_variables
  ACCOUNT_ID: "041356085284"
  GITLAB_ROLE_NAME: "oidc-provider/gitlab.com"

.aws_auth: &aws_auth
  - STS=($(
      aws sts assume-role-with-web-identity
        --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
        --role-arn arn:aws:iam::$ACCOUNT_ID:role/$GITLAB_ROLE_NAME
        --web-identity-token $ID_TOKEN_1
        --duration-seconds 3600
        --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]"
        --output text
    ));
  - |
    export AWS_ACCESS_KEY_ID=${STS[0]};
    export AWS_SECRET_ACCESS_KEY=${STS[1]};
    export AWS_SESSION_TOKEN=${STS[2]};
    export AWS_DEFAULT_REGION="us-east-1";

build:
  stage: build
  image:
    name: docker:20
    entrypoint: [""]
  tags:
    - terra-big
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t ${CI_REGISTRY_IMAGE} .
    - docker push $CI_REGISTRY_IMAGE:latest

    - docker tag $CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

aws_auth:
  stage: auth
  image:
    name: $CI_REGISTRY_IMAGE:latest
    entrypoint: [""]
  id_tokens:
    ID_TOKEN_1:
      aud: https://gitlab.com
  script:
    - *aws_auth
  #rules:
  #  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"
